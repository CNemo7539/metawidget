<project name="metawidget-test" default="test-coverage">

	<!-- Properties -->
	
	<property file="build.properties"/>
	<property file="${relative.dir}/examples/build.properties"/>
	<import file="${relative.dir}/examples/build.xml" />

	<!-- Init -->

	<target name="test-init" depends="init">
		<mkdir dir="${run.dir}"/>
		<mkdir dir="${run.dir}/logs"/>
	</target>

	<target name="compile-test" depends="compile-examples" unless="skip-compile-test">

		<mkdir dir="${relative.dir}/${build.dir}/test-classes"/>
		<mkdir dir="${relative.dir}/${build.dir}/groovy-test-classes"/>
		<mkdir dir="${relative.dir}/${build.dir}/scala-test-classes"/>
		<mkdir dir="${relative.dir}/${build.dir}/tutorial-classes"/>

		<javac sourcepath="" srcdir="${relative.dir}/test/src/java" destdir="${relative.dir}/${build.dir}/test-classes" debug="on" optimize="on" source="1.5" target="jsr14">
			<include name="org/metawidget/faces/allwidgets/**"/>
			<include name="org/metawidget/shared/allwidgets/**"/>
			<include name="org/metawidget/spring/allwidgets/**"/>
			<include name="org/metawidget/struts/allwidgets/**"/>
			<include name="org/metawidget/swing/allwidgets/**"/>
			<include name="org/metawidget/swing/SwingAllWidgetsTest.java"/>
			<classpath>
				<fileset dir="${relative.dir}/lib"/>
				<pathelement path="${relative.dir}/${build.dir}/classes"/>
			</classpath>
		</javac>
		
		<copy todir="${relative.dir}/${build.dir}/test-classes">
			<fileset dir="${relative.dir}/test/src/java">
				<include name="**/*.properties"/>
			</fileset>
		</copy>
		
		<!-- Build tutorial files (which are neither 'src/test' files, nor should -->
		<!-- end up as examples in the finished distribution                      -->
		
		<javac sourcepath="" srcdir="${relative.dir}/examples/src/java" destdir="${relative.dir}/${build.dir}/tutorial-classes" debug="on" optimize="on" target="1.5">
			<include name="org/metawidget/example/**/tutorial/**"/>
			<classpath>
				<fileset dir="${relative.dir}/lib"/>
				<pathelement path="${relative.dir}/${build.dir}/classes"/>
			</classpath>
		</javac>

		<!-- Build Groovy files -->

		<taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc">
			<classpath>
				<fileset dir="${relative.dir}/lib"/>
			</classpath>
		</taskdef>

		<groovyc srcdir="${relative.dir}/test/src/groovy" destdir="${relative.dir}/${build.dir}/groovy-test-classes">
			<include name="**/*.groovy"/>
			<classpath>
				<fileset dir="${relative.dir}/lib"/>
			</classpath>
		</groovyc>

		<!-- Build Scala files -->

		<taskdef resource="scala/tools/ant/antlib.xml">
			<classpath>
				<fileset dir="${relative.dir}/lib">
					<include name="scala-*.jar"/>
				</fileset>
			</classpath>
		</taskdef>

		<scalac srcdir="${relative.dir}/test/src/scala" destdir="${relative.dir}/${build.dir}/scala-test-classes">
			<include name="**/*.scala"/>
			<classpath>
				<fileset dir="${relative.dir}/lib"/>
			</classpath>
		</scalac>

		<!-- Build test files -->

		<javac sourcepath="" srcdir="${relative.dir}/test/src/java" destdir="${relative.dir}/${build.dir}/test-classes" debug="off" target="1.5">
			<include name="org/metawidget/inspector/impl/propertystyle/javassist/JavassistPropertyStyleDebugOffTest.java"/>
			<classpath>
				<fileset dir="${relative.dir}/lib"/>
				<pathelement path="${relative.dir}/${build.dir}/classes"/>				
			</classpath>
		</javac>
		
		<javac sourcepath="" srcdir="${relative.dir}/test/src/java" destdir="${relative.dir}/${build.dir}/test-classes" debug="on" target="1.5" fork="yes">
			<exclude name="org/metawidget/faces/allwidgets/**"/>
			<exclude name="org/metawidget/inspector/impl/propertystyle/javassist/JavassistPropertyStyleDebugOffTest.java"/>
			<exclude name="org/metawidget/shared/allwidgets/**"/>
			<exclude name="org/metawidget/spring/allwidgets/**"/>
			<exclude name="org/metawidget/struts/allwidgets/**"/>
			<exclude name="org/metawidget/swing/allwidgets/**"/>
			<exclude name="org/metawidget/swing/SwingAllWidgetsTest.java"/>
			<classpath>
				<fileset dir="${relative.dir}/lib"/>
				<pathelement path="${relative.dir}/${build.dir}/classes"/>				
				<pathelement path="${relative.dir}/${build.dir}/example-classes"/>				
				<pathelement path="${relative.dir}/${build.dir}/tutorial-classes"/>				
				<pathelement path="${relative.dir}/${build.dir}/groovy-test-classes"/>				
				<pathelement path="${relative.dir}/${build.dir}/scala-test-classes"/>				
				<pathelement path="${relative.dir}/${build.dir}/scala-example-classes"/>
			</classpath>
		</javac>
		
		<property name="skip-compile-test" value="true"/>

	</target>

	<!-- Unit Tests -->
	
	<target name="test-unit-desktop" depends="examples-desktop,compile-test">

		<!-- Note: run the unit tests against the actual metawiget.jar and   -->
		<!--       addressbook-swing.jar, to make sure they packed correctly -->

		<!-- Note: network access is disabled for Unit Tests, to make sure Metawidget isn't trying external DTDs -->

		<junit showoutput="true" fork="true" dir="${run.dir}" haltonfailure="true" haltonerror="true">
			<jvmarg value="-Djava.util.logging.config.file=${basedir}/test/src/java/logging.properties"/>
			<jvmarg value="-Dhttp.proxyHost=prevent.all.network.access"/>
			<formatter type="brief" usefile="false"/>
			<test name="org.metawidget.AllTests"/>
			<classpath>
				<fileset dir="${relative.dir}/lib">
					<exclude name="android.jar"/>
				</fileset>
				<pathelement location="${relative.dir}/${build.dir}/metawidget.jar"/>
				<pathelement location="${relative.dir}/${build.dir}/examples/swing/addressbook-swing.jar"/>
				<pathelement location="${relative.dir}/${build.dir}/examples/swing/animalraces-swing.jar"/>
				<pathelement location="${relative.dir}/${build.dir}/examples/swing/appframework-swing.jar"/>
				<pathelement path="${relative.dir}/${build.dir}/test-classes"/>
				<pathelement path="${relative.dir}/${build.dir}/groovy-test-classes"/>
				<pathelement path="${relative.dir}/${build.dir}/scala-test-classes"/>
				<pathelement path="${relative.dir}/${build.dir}/tutorial-classes"/>
				<pathelement path="examples/src/java"/>
				<pathelement path="${relative.dir}/test/src/java"/>
			</classpath>
		</junit>
		
		<junit showoutput="true" fork="true" dir="${run.dir}" haltonfailure="true" haltonerror="true">
			<jvmarg value="-Djava.util.logging.config.file=${basedir}/test/src/java/logging.properties"/>
			<jvmarg value="-Dhttp.proxyHost=prevent.all.network.access"/>
			<formatter type="brief" usefile="false"/>
			<test name="org.metawidget.util.LogUtilsTest"/>
			<classpath>
				<fileset dir="${relative.dir}/lib">
					<include name="emma.jar"/>
					<include name="junit-*.jar"/>
				</fileset>
				<pathelement location="${relative.dir}/${build.dir}/metawidget.jar"/>
				<pathelement path="${relative.dir}/${build.dir}/test-classes"/>
			</classpath>
		</junit>
	
	</target>

	<target name="test-unit-gwt" depends="compile-test, pack, pack-gwt-client">
		
		<!-- Work around for bug http://code.google.com/p/google-web-toolkit/issues/detail?id=3704 -->

		<delete dir="${relative.dir}/${build.dir}/gwt-sanitized-test-src"/>
		
		<copy todir="${relative.dir}/${build.dir}/gwt-sanitized-test-src">
			<fileset dir="${relative.dir}/test/src/java">
				<include name="org/metawidget/gwt/**"/>
				<include name="org/metawidget/example/gwt/**"/>
				<include name="org/metawidget/GwtAllWidgets.gwt.xml"/>
				<exclude name="org/metawidget/gwt/client/widgetbuilder/extgwt/**"/>
				<include name="org/metawidget/shared/**"/>
				<exclude name="**/AllWidgets_$*.java"/>
				<exclude name="**/AllWidgets$*.java"/>
			</fileset>			
		</copy>

		<junit showoutput="true" fork="true" dir="${run.dir}" haltonfailure="true" haltonerror="true">
			<jvmarg value="-Xmx256M"/>
			<formatter type="brief" usefile="false"/>
			<test name="org.metawidget.example.gwt.addressbook.client.GwtAddressBookTest"/>
			<classpath>				
				<pathelement path="examples/src/java"/>
				<pathelement path="examples/src/web/gwt/addressbook/WEB-INF"/>
				<pathelement path="${relative.dir}/${build.dir}/gwt-sanitized-test-src"/>
				<pathelement path="${relative.dir}/${build.dir}/example-classes"/>					
				<pathelement path="${relative.dir}/${build.dir}/test-classes"/>
				<fileset dir="${relative.dir}/lib">
					<include name="gwt-user.jar"/>
					<include name="gwt-dev-*.jar"/>
					<include name="junit-*.jar"/>
					<include name="emma.jar"/>
				</fileset>
				<pathelement path="${relative.dir}/${build.dir}/metawidget.jar"/>
				<pathelement path="${relative.dir}/${build.dir}/metawidget-gwt-client.jar"/>
			</classpath>
		</junit>
		
		<junit showoutput="true" fork="true" dir="${run.dir}" haltonfailure="true" haltonerror="true">
			<jvmarg value="-Xmx256M"/>
			<formatter type="brief" usefile="false"/>
			<test name="org.metawidget.example.gwt.clientside.client.GwtClientSideTest"/>
			<classpath>				
				<pathelement path="examples/src/java"/>
				<pathelement path="${relative.dir}/${build.dir}/gwt-sanitized-test-src"/>
				<pathelement path="${relative.dir}/${build.dir}/example-classes"/>
				<pathelement path="${relative.dir}/${build.dir}/test-classes"/>
				<fileset dir="${relative.dir}/lib">
					<include name="gwt-user.jar"/>
					<include name="gwt-dev-*.jar"/>
					<include name="gxt.jar"/>
					<include name="junit-*.jar"/>
					<include name="emma.jar"/>
				</fileset>
				<pathelement path="${relative.dir}/${build.dir}/metawidget.jar"/>
				<pathelement path="${relative.dir}/${build.dir}/metawidget-gwt-client.jar"/>
				<pathelement path="${relative.dir}/${build.dir}/metawidget-gwt-extgwt-client.jar"/>
			</classpath>
		</junit>

		<junit showoutput="true" fork="true" dir="${run.dir}" haltonfailure="true" haltonerror="true">
			<jvmarg value="-Xmx256M"/>
			<formatter type="brief" usefile="false"/>
			<test name="org.metawidget.gwt.allwidgets.client.GwtAllWidgetsTest"/>
			<classpath>
				<pathelement path="${relative.dir}/${build.dir}/gwt-sanitized-test-src"/>
				<pathelement path="${relative.dir}/test/src/java/org/metawidget/gwt/allwidgets"/>
				<pathelement path="${relative.dir}/${build.dir}/test-classes"/>
				<fileset dir="${relative.dir}/lib">
					<include name="gwt-user.jar"/>
					<include name="gwt-dev-*.jar"/>
					<include name="junit-*.jar"/>
					<include name="emma.jar"/>
				</fileset>
				<pathelement path="${relative.dir}/${build.dir}/metawidget.jar"/>
				<pathelement path="${relative.dir}/${build.dir}/metawidget-gwt-client.jar"/>
			</classpath>
		</junit>

		<junit showoutput="true" fork="true" dir="${run.dir}" haltonfailure="true" haltonerror="true">
			<jvmarg value="-Xmx256M"/>
			<formatter type="brief" usefile="false"/>
			<test name="org.metawidget.gwt.quirks.client.GwtQuirksTest"/>
			<classpath>
				<pathelement path="${relative.dir}/${build.dir}/gwt-sanitized-test-src"/>
				<pathelement path="${relative.dir}/test/src/java/org/metawidget/gwt/quirks"/>
				<dirset dir="${relative.dir}/${build.dir}/test-classes"/>
				<fileset dir="${relative.dir}/lib">
					<include name="gwt-user.jar"/>
					<include name="gwt-dev-*.jar"/>
					<include name="junit-*.jar"/>
					<include name="emma.jar"/>
				</fileset>
				<pathelement path="${relative.dir}/${build.dir}/metawidget.jar"/>
				<pathelement path="${relative.dir}/${build.dir}/metawidget-gwt-client.jar"/>
			</classpath>
		</junit>

		<copy todir="${relative.dir}/${build.dir}/gwt-sanitized-test-src">
			<fileset dir="${relative.dir}/test/src/java">
				<include name="org/metawidget/gwt/client/widgetbuilder/extgwt/**"/>
			</fileset>			
		</copy>

		<junit showoutput="true" fork="true" dir="${run.dir}" haltonfailure="true" haltonerror="true">
			<jvmarg value="-Xmx256M"/>
			<formatter type="brief" usefile="false"/>
			<test name="org.metawidget.gwt.client.ui.GwtMetawidgetMixinTest"/>
			<test name="org.metawidget.gwt.client.widgetbuilder.extgwt.ExtGwtWidgetBuilderTest"/>
			<classpath>
				<pathelement path="${relative.dir}/${build.dir}/gwt-sanitized-test-src"/>
				<dirset dir="${relative.dir}/${build.dir}/test-classes"/>
				<fileset dir="${relative.dir}/lib">
					<include name="gwt-user.jar"/>
					<include name="gwt-dev-*.jar"/>
					<include name="gxt.jar"/>
					<include name="junit-*.jar"/>
					<include name="emma.jar"/>
				</fileset>
				<pathelement path="${relative.dir}/${build.dir}/metawidget.jar"/>
				<pathelement path="${relative.dir}/${build.dir}/metawidget-gwt-client.jar"/>
				<pathelement path="${relative.dir}/${build.dir}/metawidget-gwt-extgwt-client.jar"/>
			</classpath>
		</junit>
	
	</target>

	<target name="test-unit-14" depends="compile-test, pack">

		<available property="java4-exists" file="${java4.dir}/bin"/>
		<fail message="JDK 1.4 not installed at 'java4.dir' (as indicated in build.properties)" unless="java4-exists"/>

		<java classname="junit.textui.TestRunner" fork="true" jvm="${java4.dir}/bin/java" dir="${run.dir}">
			<arg line="org.metawidget.swing.SwingAllWidgetsTest"/>
			<classpath>
				<fileset dir="${relative.dir}/lib">
					<exclude name="android.jar"/>
					<exclude name="junit*.jar"/>
				</fileset>
				<pathelement location="test/lib/junit.jar"/>
				<pathelement location="${relative.dir}/${build.dir}/metawidget.jar"/>
				<pathelement path="${relative.dir}/${build.dir}/test-classes"/>
				<pathelement path="${relative.dir}/test/src/java"/>
			</classpath>
		</java>

	</target>

	<target name="test-unit" depends="test-unit-desktop, test-unit-gwt, test-unit-14"/>

	<target name="test-coverage" depends="clean">

		<!-- Compile with debug on -->
		
		<property name="build.debug" value="on"/>		
		<antcall target="compile-test"/>
		<property name="skip-compile-main" value="true"/>		

		<!-- Instrument -->

		<path id="emma.lib" >
			<pathelement location="lib/emma.jar" />
			<pathelement location="lib/emma_ant.jar" />
		</path>
		
		<taskdef resource="emma_ant.properties" classpathref="emma.lib" />
		
		<emma>
			<instr instrpath="${relative.dir}/${build.dir}/classes" destdir="${relative.dir}/${build.dir}/classes" metadatafile="${run.dir}/metadata.emma" merge="true" mode="overwrite">
				<filter excludes="*Constants, org.metawidget.android.*, org.metawidget.example.android.*"/>				
			</instr>
			<instr instrpath="${relative.dir}/${build.dir}/example-classes" destdir="${relative.dir}/${build.dir}/example-classes" metadatafile="${run.dir}/metadata.emma" merge="true" mode="overwrite">
				<filter excludes="org.metawidget.example.android.*, org.metawidget.example.swing.console.*"/>				
			</instr>
			<instr instrpath="${relative.dir}/${build.dir}/tutorial-classes" destdir="${relative.dir}/${build.dir}/tutorial-classes" metadatafile="${run.dir}/metadata.emma" merge="true" mode="overwrite">
				<filter excludes="org.metawidget.example.swing.tutorial.Main"/>
			</instr>
			<!--<instr instrpath="${relative.dir}/${build.dir}/test-classes" destdir="${relative.dir}/${build.dir}/test-classes" metadatafile="${run.dir}/metadata.emma" merge="true" mode="overwrite">
				<filter excludes="*DebugOffTest*"/>
			</instr>-->
		</emma>

		<!-- Prep servers -->
		
		<available property="tomcat-exists" file="${tomcat.dir}/bin/bootstrap.jar"/>
		<fail message="Apache Tomcat not installed at 'tomcat.dir' (as indicated in build.properties)" unless="tomcat-exists"/>
		<copy todir="${tomcat.dir}/lib" file="lib/emma.jar"/>

		<available property="tomcat4-exists" file="${tomcat4.dir}/bin/bootstrap.jar"/>
		<fail message="Apache Tomcat 4 not installed at 'tomcat4.dir' (as indicated in build.properties)" unless="tomcat4-exists"/>
		<copy todir="${tomcat4.dir}/shared/lib" file="lib/emma.jar"/>

		<available property="jboss-exists" file="${jboss.dir}/bin/run.bat"/>
		<fail message="JBoss not installed at 'jboss.dir' (as indicated in build.properties)" unless="jboss-exists"/>
		<copy todir="${jboss.dir}/server/default/lib" file="lib/emma.jar"/>

		<available property="glassfish-exists" file="${glassfish.dir}/bin/asadmin.bat"/>
		<fail message="GlassFish not installed at 'glassfish.dir' (as indicated in build.properties)" unless="glassfish-exists"/>
		<copy todir="${glassfish.dir}/domains/${glassfish.domain}/lib" file="lib/emma.jar"/>

		<available property="jetty-exists" file="${jetty.dir}/start.jar"/>
		<fail message="Jetty not installed at 'jetty.dir' (as indicated in build.properties)" unless="jetty-exists"/>
		<copy todir="${jetty.dir}/lib" file="lib/emma.jar"/>

		<!-- Run tests as normal -->

		<antcall target="test"/>

		<!-- Report -->

		<emma>
			<report>
				<sourcepath>
					<dirset dir="examples/src/java"/>
					<dirset dir="src/java"/>
					<dirset dir="${relative.dir}/test/src/java"/>
		        </sourcepath>				
				<fileset dir="${run.dir}">
					<include name="*.ec"/>
					<include name="*.emma"/>
				</fileset>
				<html outfile="${relative.dir}/${build.dir}/doc/coverage/index.html" />
			</report>
		</emma>
		
	</target>

	<!-- Manual test -->
		
	<target name="test-android-allwidgets" depends="pack,compile-test">

		<mkdir dir="${relative.dir}/${build.dir}/test/android/allwidgets/dex-classes"/>
			
		<!-- Copy and DEX only the relevant classes -->
		
		<copy todir="${relative.dir}/${build.dir}/test/android/allwidgets/dex-classes">
			
			<fileset dir="${relative.dir}/${build.dir}/classes">
				<include name="org/metawidget/*.class"/>
				<include name="org/metawidget/android/**"/>
				<include name="org/metawidget/iface/**"/>
				<include name="org/metawidget/inspector/*.class"/>
				<include name="org/metawidget/inspector/composite/**"/>
				<include name="org/metawidget/inspector/iface/**"/>
				<include name="org/metawidget/inspector/impl/**"/>
				<include name="org/metawidget/inspector/propertytype/**"/>
				<include name="org/metawidget/inspector/java5/**"/>
				<include name="org/metawidget/inspector/xml/**"/>
				<include name="org/metawidget/mixin/base/**"/>
				<include name="org/metawidget/mixin/w3c/**"/>
				<include name="org/metawidget/util/**"/>
				<include name="org/metawidget/widgetbuilder/**"/>
				<include name="org/metawidget/widgetprocessor/**"/>
			</fileset>			
			<fileset dir="${relative.dir}/${build.dir}/test-classes">
				<include name="org/metawidget/android/allwidgets/**"/>
				<include name="org/metawidget/shared/allwidgets/**/*.class"/>
			</fileset>

		</copy>
		
		<property name="android.tools.dir" value="${android.dir}/tools" />
		
        <exec executable="${android.tools.dir}/dx.bat" failonerror="true">
            <arg value="--dex" />
            <arg value="--output=${basedir}/${relative.dir}/${build.dir}/test/android/allwidgets/classes.dex" />
            <arg value="--positions=lines" />
            <arg path="${basedir}/${relative.dir}/${build.dir}/test/android/allwidgets/dex-classes" />
        </exec>

		<!-- Put the project's resources into the output package file -->
				
		<exec executable="${android.tools.dir}/aapt.exe" failonerror="true" dir="${relative.dir}/test/src/android/allwidgets">
            <arg value="package" />
            <arg value="-f" />
            <arg value="-M" />
            <arg value="AndroidManifest.xml" />
            <arg value="-S" />
            <arg value="res" />
            <arg value="-I" />
            <arg value="${android.dir}/android.jar" />
            <arg value="-F" />
            <arg value="${basedir}/${relative.dir}/${build.dir}/test/android/allwidgets-android.ap_" />
        </exec>

	    <!-- Put the project's .dex files into the APK -->
		
        <exec executable="${android.tools.dir}/apkbuilder.bat" failonerror="true">
            <arg value="${basedir}/${relative.dir}/${build.dir}/test/android/allwidgets-android.apk" />
            <arg value="-z" />
            <arg value="${basedir}/${relative.dir}/${build.dir}/test/android/allwidgets-android.ap_" />
            <arg value="-f" />
            <arg value="${basedir}/${relative.dir}/${build.dir}/test/android/allwidgets/classes.dex" />
        </exec>

	</target>

	<!-- Web Test -->
		
	<target name="test-web-start-tomcat">

		<available property="tomcat-exists" file="${tomcat.dir}/bin/bootstrap.jar"/>
		<fail message="Apache Tomcat not installed at 'tomcat.dir' (as indicated in build.properties)" unless="tomcat-exists"/>

		<echo message="Starting ${tomcat.dir} (then waiting 10 seconds)..."/>
		
		<java jar="${tomcat.dir}/bin/bootstrap.jar" fork="true" spawn="true" dir="${run.dir}">
			<jvmarg value="-Dcatalina.home=${tomcat.dir}"/>
			<jvmarg value="-Duser.timezone=GMT"/>
			<jvmarg value="-Duser.region=US"/>
		</java>
		
		<sleep seconds="10"/>
		
	</target>
	
	<target name="test-web-stop-tomcat">
		
		<echo message="Stopping ${tomcat.dir} (then waiting 30 seconds)..."/>

		<java jar="${tomcat.dir}/bin/bootstrap.jar" fork="true" dir="${run.dir}">
	        <jvmarg value="-Dcatalina.home=${tomcat.dir}"/>
	        <arg line="stop"/>
	    </java>
		
		<sleep seconds="30"/>

	</target>
	
	<target name="test-faces-addressbook" depends="example-faces-addressbook,compile-test">
		
		<!-- Test on Tomcat -->

		<copy file="${relative.dir}/${build.dir}/examples/faces/addressbook-faces.war" todir="${tomcat.dir}/webapps" overwrite="true"/>
		<delete dir="${tomcat.dir}/webapps/addressbook-faces"/>
		<antcall target="test-web-start-tomcat"/>

		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${relative.dir}/test/src/web/examples/faces">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file addressbook-test.xml"/>
		</java>
		
		<antcall target="test-web-stop-tomcat"/>
		
		<!-- Test on GlassFish -->

		<delete>
			<fileset dir="${glassfish.dir}/domains/${glassfish.domain}/autodeploy">
				<include name="addressbook-*"/>
			</fileset>
		</delete>
		<copy file="${relative.dir}/${build.dir}/examples/faces/addressbook-faces.war" todir="${glassfish.dir}/domains/${glassfish.domain}/autodeploy" overwrite="true"/>
		<antcall target="test-web-start-glassfish"/>

		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${relative.dir}/test/src/web/examples/faces">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file addressbook-test.xml"/>
		</java>

		<antcall target="test-web-stop-glassfish"/>

		<!-- Test on Jetty -->

		<copy file="${relative.dir}/${build.dir}/examples/faces/addressbook-faces.war" todir="${jetty.dir}/webapps" overwrite="true"/>
		<antcall target="test-web-start-jetty"/>

		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${relative.dir}/test/src/web/examples/faces">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file addressbook-test.xml"/>
		</java>

		<antcall target="test-web-stop-jetty"/>

	</target>

	<target name="test-faces-penguincolony" depends="example-faces-penguincolony,compile-test">
		
		<!-- Test on Tomcat -->

		<copy file="${relative.dir}/${build.dir}/examples/faces/penguincolony-faces.war" todir="${tomcat.dir}/webapps" overwrite="true"/>
		<delete dir="${tomcat.dir}/webapps/penguincolony-faces"/>
		<antcall target="test-web-start-tomcat"/>

		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${relative.dir}/test/src/web/examples/faces">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file penguincolony-test.xml"/>
		</java>
		
		<antcall target="test-web-stop-tomcat"/>
		
		<!-- Test on GlassFish -->

		<delete>
			<fileset dir="${glassfish.dir}/domains/${glassfish.domain}/autodeploy">
				<include name="penguincolony-*"/>
			</fileset>
		</delete>
		<copy file="${relative.dir}/${build.dir}/examples/faces/penguincolony-faces.war" todir="${glassfish.dir}/domains/${glassfish.domain}/autodeploy" overwrite="true"/>
		<antcall target="test-web-start-glassfish"/>

		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${relative.dir}/test/src/web/examples/faces">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file penguincolony-test.xml"/>
		</java>

		<antcall target="test-web-stop-glassfish"/>

		<!-- Test on Jetty (doesn't work?)

		<copy file="${relative.dir}/${build.dir}/examples/faces/penguincolony-faces.war" todir="${jetty.dir}/webapps" overwrite="true"/>
		<antcall target="test-web-start-jetty"/>

		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${relative.dir}/test/src/web/examples/faces">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file penguincolony-test.xml"/>
		</java>

		<antcall target="test-web-stop-jetty"/> -->

	</target>

	<target name="test-faces-seam-booking" depends="example-faces-seam-booking,compile-test">
		
		<ant dir="${relative.dir}/${build.dir}/examples/faces/seam/booking"/>
		<antcall target="test-web-start-jboss"/>

		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${relative.dir}/test/src/web/examples/faces">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file seam-booking-test.xml"/>
		</java>

		<antcall target="test-web-stop-jboss"/>
		
	</target>

	<target name="test-faces-seam-dvdstore" depends="example-faces-seam-dvdstore,compile-test">
		
		<ant dir="${relative.dir}/${build.dir}/examples/faces/seam/dvdstore"/>
		<antcall target="test-web-start-jboss"/>

		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${relative.dir}/test/src/web/examples/faces">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file seam-dvdstore-test.xml"/>
		</java>

		<antcall target="test-web-stop-jboss"/>
		
	</target>

	<target name="test-faces-seam-groovybooking" depends="example-faces-seam-groovybooking,compile-test">
		
		<ant dir="${relative.dir}/${build.dir}/examples/faces/seam/groovybooking"/>
		<antcall target="test-web-start-jboss"/>

		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${relative.dir}/test/src/web/examples/faces">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file seam-groovybooking-test.xml"/>
		</java>

		<antcall target="test-web-stop-jboss"/>
		
	</target>

	<target name="test-gwt-addressbook" depends="example-gwt-addressbook,compile-test">
		
		<!-- Test on Tomcat -->
		
		<copy file="${relative.dir}/${build.dir}/examples/gwt/addressbook-gwt.war" todir="${tomcat.dir}/webapps" overwrite="true"/>
		<delete dir="${tomcat.dir}/webapps/addressbook-gwt"/>
		<antcall target="test-web-start-tomcat"/>

		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${relative.dir}/test/src/web/examples/gwt">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file addressbook-test.xml"/>
		</java>

		<antcall target="test-web-stop-tomcat"/>
		
		<!-- Test on GlassFish -->

		<delete>
			<fileset dir="${glassfish.dir}/domains/${glassfish.domain}/autodeploy">
				<include name="addressbook-*"/>
			</fileset>
		</delete>
		<copy file="${relative.dir}/${build.dir}/examples/gwt/addressbook-gwt.war" todir="${glassfish.dir}/domains/${glassfish.domain}/autodeploy" overwrite="true"/>
		<antcall target="test-web-start-glassfish"/>

		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${relative.dir}/test/src/web/examples/gwt">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file addressbook-test.xml"/>
		</java>

		<antcall target="test-web-stop-glassfish"/>

		<!-- Test on Jetty

		<copy file="${relative.dir}/${build.dir}/examples/gwt/addressbook-gwt.war" todir="${jetty.dir}/webapps" overwrite="true"/>
		<antcall target="test-web-start-jetty"/>

		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${relative.dir}/test/src/web/examples/gwt">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file addressbook-test.xml"/>
		</java>

		<antcall target="test-web-stop-jetty"/> -->

	</target>

	<target name="test-gwt-clientside" depends="example-gwt-clientside,compile-test">
		
		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${relative.dir}/test/src/web/examples/gwt">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file clientside-test.xml"/>
		</java>

	</target>

	<target name="test-jsp-addressbook" depends="example-jsp-addressbook,compile-test">
		
		<!-- Test on Tomcat -->
		
		<copy file="${relative.dir}/${build.dir}/examples/jsp/addressbook-jsp.war" todir="${tomcat.dir}/webapps" overwrite="true"/>
		<delete dir="${tomcat.dir}/webapps/addressbook-jsp"/>
		<antcall target="test-web-start-tomcat"/>

		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${relative.dir}/test/src/web/examples/jsp">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file addressbook-test.xml"/>
		</java>

		<antcall target="test-web-stop-tomcat"/>
		
		<!-- Test on GlassFish -->

		<delete>
			<fileset dir="${glassfish.dir}/domains/${glassfish.domain}/autodeploy">
				<include name="addressbook-*"/>
			</fileset>
		</delete>
		<copy file="${relative.dir}/${build.dir}/examples/jsp/addressbook-jsp.war" todir="${glassfish.dir}/domains/${glassfish.domain}/autodeploy" overwrite="true"/>
		<antcall target="test-web-start-glassfish"/>

		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${relative.dir}/test/src/web/examples/jsp">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file addressbook-test.xml"/>
		</java>

		<antcall target="test-web-stop-glassfish"/>

		<!-- Test on Jetty -->

		<copy file="${relative.dir}/${build.dir}/examples/jsp/addressbook-jsp.war" todir="${jetty.dir}/webapps" overwrite="true"/>
		<antcall target="test-web-start-jetty"/>

		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${relative.dir}/test/src/web/examples/jsp">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file addressbook-test.xml"/>
		</java>

		<antcall target="test-web-stop-jetty"/>

	</target>
	
	<target name="test-struts-addressbook" depends="example-struts-addressbook,compile-test">
		
		<!-- Test on Tomcat -->
		
		<copy file="${relative.dir}/${build.dir}/examples/struts/addressbook-struts.war" todir="${tomcat.dir}/webapps" overwrite="true"/>
		<delete dir="${tomcat.dir}/webapps/addressbook-struts"/>
		<antcall target="test-web-start-tomcat"/>

		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${relative.dir}/test/src/web/examples/struts">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file addressbook-test.xml"/>
		</java>

		<antcall target="test-web-stop-tomcat"/>

		<!-- Test on GlassFish -->

		<delete>
			<fileset dir="${glassfish.dir}/domains/${glassfish.domain}/autodeploy">
				<include name="addressbook-*"/>
			</fileset>
		</delete>
		<copy file="${relative.dir}/${build.dir}/examples/struts/addressbook-struts.war" todir="${glassfish.dir}/domains/${glassfish.domain}/autodeploy" overwrite="true"/>
		<antcall target="test-web-start-glassfish"/>

		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${relative.dir}/test/src/web/examples/struts">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file addressbook-test.xml"/>
		</java>

		<antcall target="test-web-stop-glassfish"/>

		<!-- Test on Jetty -->

		<copy file="${relative.dir}/${build.dir}/examples/struts/addressbook-struts.war" todir="${jetty.dir}/webapps" overwrite="true"/>
		<antcall target="test-web-start-jetty"/>

		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${relative.dir}/test/src/web/examples/struts">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file addressbook-test.xml"/>
		</java>

		<antcall target="test-web-stop-jetty"/>

	</target>

	<target name="test-spring-addressbook" depends="example-spring-addressbook,compile-test">
		
		<!-- Test on Tomcat -->
		
		<copy file="${relative.dir}/${build.dir}/examples/spring/addressbook-spring.war" todir="${tomcat.dir}/webapps" overwrite="true"/>
		<delete dir="${tomcat.dir}/webapps/addressbook-spring"/>
		<antcall target="test-web-start-tomcat"/>

		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${relative.dir}/test/src/web/examples/spring">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file addressbook-test.xml"/>
		</java>

		<antcall target="test-web-stop-tomcat"/>
		
		<!-- Test on GlassFish -->

		<delete>
			<fileset dir="${glassfish.dir}/domains/${glassfish.domain}/autodeploy">
				<include name="addressbook-*"/>
			</fileset>
		</delete>
		<copy file="${relative.dir}/${build.dir}/examples/spring/addressbook-spring.war" todir="${glassfish.dir}/domains/${glassfish.domain}/autodeploy" overwrite="true"/>
		<antcall target="test-web-start-glassfish"/>

		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${relative.dir}/test/src/web/examples/spring">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file addressbook-test.xml"/>
		</java>

		<antcall target="test-web-stop-glassfish"/>

		<!-- Test on Jetty -->

		<copy file="${relative.dir}/${build.dir}/examples/spring/addressbook-spring.war" todir="${jetty.dir}/webapps" overwrite="true"/>
		<antcall target="test-web-start-jetty"/>

		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${relative.dir}/test/src/web/examples/spring">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file addressbook-test.xml"/>
		</java>

		<antcall target="test-web-stop-jetty"/>

	</target>

	<target name="test-swing-addressbook-applet" depends="example-swing-addressbook-applet,compile-test">
		
		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${run.dir}">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file '${basedir}/test/src/web/examples/swing/applet/addressbook-test.xml'"/>
		</java>
		
	</target>

	<available property="webtest-available" file="${webtest.dir}/webtest.xml"/>

	<target name="test-web-skip" unless="webtest-available">

		<echo level="warning" message="WebTest not installed at 'webtest.dir' in 'build.properties'. Not running web tests"/>

	</target>
	
	<target name="test-web-ok" if="webtest-available">
		
		<antcall target="test-faces-addressbook"/>
		<antcall target="test-faces-penguincolony"/>		
		<antcall target="test-faces-quirks"/>
		<antcall target="test-gwt-addressbook"/>
		<antcall target="test-gwt-clientside"/>
		<antcall target="test-jsp-addressbook"/>
		<antcall target="test-jsp-allwidgets"/>
		<antcall target="test-spring-addressbook"/>
		<antcall target="test-spring-quirks"/>
		<antcall target="test-struts-addressbook"/>
		<antcall target="test-struts-quirks"/>
		<antcall target="test-swing-addressbook-applet"/>					
		
	</target>

	<target name="test-web" depends="test-web-ok, test-web-skip"/>

	<!-- Web 1.4 Test -->

	<target name="test-web-start-tomcat4">

		<available property="tomcat4-exists" file="${tomcat4.dir}/bin/bootstrap.jar"/>
		<fail message="Apache Tomcat 4 not installed at 'tomcat4.dir' (as indicated in build.properties)" unless="tomcat4-exists"/>
		
		<available property="java4-exists" file="${java4.dir}/bin"/>
		<fail message="JDK 1.4 not installed at 'java4.dir' (as indicated in build.properties)" unless="java4-exists"/>		

		<!-- Delete work, in case of J2SE 1.4/Java 5 class version mixup -->
		
		<delete includeemptydirs="true" failonerror="false" dir="${tomcat4.dir}/work"/>
		
		<echo message="Starting ${tomcat4.dir} (then waiting 10 seconds)..."/>
		<echo message="If Tomcat 4 fails to start, try moving 'conf/server-noexamples.xml.config' to 'conf/server.xml'"/>
		
        <exec executable="${tomcat4.dir}/bin/startup.bat" dir="${run.dir}" spawn="true">
        	<env key="JAVA_HOME" value="${java4.dir}"/>
        	<env key="CATALINA_HOME" value="${tomcat4.dir}"/>
        	<env key="CATALINA_OPTS" value="-Duser.timezone=GMT -Duser.language=en -Duser.country=UK"/>
		</exec>
		
		<sleep seconds="10"/>
		
	</target>
	
	<target name="test-web-stop-tomcat4">
		
		<echo message="Stopping ${tomcat4.dir} (then waiting 30 seconds)..."/>

		<java jar="${tomcat4.dir}/bin/bootstrap.jar" fork="true" dir="${run.dir}">
	        <jvmarg value="-Dcatalina.home=${tomcat4.dir}"/>
	        <arg line="stop"/>
	    </java>
		
		<sleep seconds="30"/>

	</target>

	<!-- JBoss Test -->

	<target name="test-web-start-jboss">

		<available property="jboss-exists" file="${jboss.dir}/bin/run.bat"/>
		<fail message="JBoss not installed at 'jboss.dir' (as indicated in build.properties)" unless="jboss-exists"/>
		
		<delete includeemptydirs="true" failonerror="false">
			<fileset dir="${jboss.dir}/server/default/tmp">
				<include name="**/*"/>
			</fileset>
			<fileset dir="${jboss.dir}/server/default/work">
				<include name="**/*"/>
			</fileset>			
		</delete>
		
		<echo message="Starting ${jboss.dir} (then waiting 60 seconds)..."/>

		<!-- Unlike for Tomcat, don't also set time zone -->
		<!-- here: seems to badly mess up Seam/Facelets  -->
		
        <exec executable="${jboss.dir}/bin/run.bat" dir="${run.dir}" spawn="true">
	    	<env key="JAVA_OPTS" value="-Duser.language=en -Duser.country=UK -Xms128M -Xmx512M -XX:MaxPermSize=256M"/>
		</exec>
		
		<sleep seconds="60"/>
		
	</target>
	
	<target name="test-web-stop-jboss">
		
		<echo message="Stopping ${jboss.dir} (then waiting 30 seconds)..."/>
        <exec executable="${jboss.dir}/bin/shutdown.bat" dir="${run.dir}">
        	<arg value="-S"/>
		</exec>
		<sleep seconds="30"/>

	</target>

	<available property="jboss-available" file="${jboss.dir}/bin/run.bat"/>

	<target name="test-jboss-skip" unless="jboss-available">

		<echo level="warning" message="JBoss not installed at 'jboss.dir' in 'build.properties'. Not running JBoss tests"/>

	</target>
	
	<target name="test-jboss-ok" if="jboss-available">

		<antcall target="test-faces-seam-booking"/>
		<antcall target="test-faces-seam-dvdstore"/>
		<antcall target="test-faces-seam-groovybooking"/>
		
	</target>

	<target name="test-jboss" depends="test-jboss-ok, test-jboss-skip"/>

	<!-- GlassFish Tests -->
	
	<!-- (if GlassFish fails intermittently, try setting com.sun.enterprise.server.ss.setReuseAddress -->
	<!--  to true as discussed here http://forums.java.net/jive/message.jspa?messageID=172574)        -->

	<target name="test-web-start-glassfish">

		<available property="glassfish-exists" file="${glassfish.dir}/bin/asadmin.bat"/>
		<fail message="GlassFish not installed at 'glassfish.dir' (as indicated in build.properties)" unless="glassfish-exists"/>
		
		<echo message="Starting ${glassfish.dir} (then waiting 50 seconds)..."/>

        <exec executable="${glassfish.dir}/bin/asadmin.bat" dir="${run.dir}" spawn="true">
        	<arg value="start-domain"/>
        	<arg value="${glassfish.domain}"/>
		</exec>
		
		<sleep seconds="50"/>
		
	</target>
	
	<target name="test-web-stop-glassfish">
		
		<echo message="Stopping ${glassfish.dir} (then waiting 30 seconds)..."/>
        <exec executable="${glassfish.dir}/bin/asadmin.bat" dir="${run.dir}">
        	<arg value="stop-domain"/>
        	<arg value="${glassfish.domain}"/>
		</exec>
		<sleep seconds="30"/>

	</target>

	<!-- Jetty Tests -->

	<!-- (if Jetty fails intermittently, try the latest version) -->

	<target name="test-web-start-jetty">

		<available property="jetty-exists" file="${jetty.dir}/start.jar"/>
		<fail message="Jetty not installed at 'jetty.dir' (as indicated in build.properties)" unless="jetty-exists"/>
		
		<echo message="Starting ${jetty.dir} (then waiting 30 seconds)..."/>

		<java jar="${jetty.dir}/start.jar" fork="true" spawn="true" dir="${run.dir}">
			<jvmarg value="-Djetty.home=${jetty.dir}"/>
			<jvmarg value="-Duser.timezone=GMT"/>
			<jvmarg value="-Duser.region=US"/>
			<jvmarg value="-DSTOP.PORT=8079"/>
			<jvmarg value="-DSTOP.KEY=secret"/>
		</java>

		<sleep seconds="30"/>
		
	</target>
	
	<target name="test-web-stop-jetty">
		
		<echo message="Stopping ${jetty.dir} (then waiting 30 seconds)..."/>
		<java jar="${jetty.dir}/start.jar" fork="true" dir="${run.dir}">
			<jvmarg value="-Djetty.home=${jetty.dir}"/>
			<jvmarg value="-DSTOP.PORT=8079"/>
			<jvmarg value="-DSTOP.KEY=secret"/>
			<arg value="--stop"/>
		</java>
		<sleep seconds="30"/>

	</target>

	<!-- AllWidgets tests -->
	
	<target name="test-shared-allwidgets" depends="flatten-libs,compile-test">

		<copy todir="${relative.dir}/${build.dir}/test-classes">
			<fileset dir="${relative.dir}/test/src/java">
				<include name="org/metawidget/shared/allwidgets/**/*.properties"/>
				<include name="org/metawidget/shared/allwidgets/**/metawidget-metadata.xml"/>
			</fileset>
		</copy>

	</target>
		
	<target name="test-faces-allwidgets" depends="test-shared-allwidgets">
		
		<mkdir dir="${relative.dir}/${build.dir}/test/faces"/>

		<war warfile="${relative.dir}/${build.dir}/test/faces/allwidgets-faces.war" webxml="${relative.dir}/test/src/web/faces/allwidgets/WEB-INF/web.xml">
			<fileset dir="${relative.dir}/test/src/web/faces/allwidgets">
				<exclude name="**/classes/**"/>
				<exclude name="**/lib/**"/>
				<exclude name="**/.*"/>
				<exclude name="WEB-INF/web.xml"/>
			</fileset>
			<classes dir="${relative.dir}/${build.dir}/test-classes">
				<include name="org/metawidget/faces/allwidgets/**"/>
				<include name="org/metawidget/shared/allwidgets/**"/>
			</classes>
			<lib dir="${relative.dir}/${build.dir}/lib">
				<include name="commons-beanutils-*.jar"/>
				<include name="commons-codec-*.jar"/>
				<include name="commons-digester-*.jar"/>
				<include name="commons-el-*.jar"/>
				<include name="commons-lang-*.jar"/>
				<include name="jsp-2.0.jar"/>
				<include name="jstl-*.jar"/>
				<include name="metawidget.jar"/>
				<include name="myfaces-*-1.1*.jar"/>
				<include name="richfaces-*.jar"/>
			</lib>
		</war>
		
		<copy file="${relative.dir}/${build.dir}/test/faces/allwidgets-faces.war" todir="${tomcat4.dir}/webapps" overwrite="true"/>
		<delete dir="${tomcat4.dir}/webapps/allwidgets-faces"/>
		<antcall target="test-web-start-tomcat4"/>
		
		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${relative.dir}/test/src/web/faces">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file allwidgets-test.xml"/>
		</java>
		
		<antcall target="test-web-stop-tomcat4"/>
		
	</target>

	<target name="test-faces-quirks" depends="flatten-libs,compile-test">
		
		<mkdir dir="${relative.dir}/${build.dir}/test/faces"/>

		<war warfile="${relative.dir}/${build.dir}/test/faces/quirks-faces.war" webxml="${relative.dir}/test/src/web/faces/quirks/WEB-INF/web.xml">
			<fileset dir="${relative.dir}/test/src/web/faces/quirks">
				<exclude name="**/classes/**"/>
				<exclude name="**/lib/**"/>
				<exclude name="**/.*"/>
				<exclude name="WEB-INF/web.xml"/>
			</fileset>
			<classes dir="${relative.dir}/${build.dir}/test-classes">
				<include name="org/metawidget/faces/quirks/**"/>
			</classes>
			<lib dir="${relative.dir}/${build.dir}/lib">
				<include name="commons-beanutils-*.jar"/>
				<include name="commons-codec-*.jar"/>
				<include name="commons-collections-*.jar"/>
				<include name="commons-digester-*.jar"/>
				<include name="commons-discovery-*.jar"/>
				<include name="commons-logging-*.jar"/>
				<include name="jstl-*.jar"/>
				<include name="metawidget.jar"/>
				<include name="myfaces-*-1.2*.jar"/>
				<include name="richfaces-*.jar"/>
				<include name="standard.jar"/>
			</lib>
		</war>
		
		<copy file="${relative.dir}/${build.dir}/test/faces/quirks-faces.war" todir="${tomcat.dir}/webapps" overwrite="true"/>
		<delete dir="${tomcat.dir}/webapps/quirks-faces"/>
		<antcall target="test-web-start-tomcat"/>
		
		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${relative.dir}/test/src/web/faces">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file quirks-test.xml"/>
		</java>
		
		<antcall target="test-web-stop-tomcat"/>
		
	</target>

	<target name="test-jsp-allwidgets" depends="test-shared-allwidgets">
		
		<mkdir dir="${relative.dir}/${build.dir}/test/jsp"/>

		<war warfile="${relative.dir}/${build.dir}/test/jsp/allwidgets-jsp.war" webxml="${relative.dir}/test/src/web/jsp/allwidgets/WEB-INF/web.xml">
			<fileset dir="${relative.dir}/test/src/web/jsp/allwidgets">
				<exclude name="**/classes/**"/>
				<exclude name="**/lib/**"/>
				<exclude name="**/.*"/>
				<exclude name="WEB-INF/web.xml"/>
			</fileset>
			<classes dir="${relative.dir}/${build.dir}/test-classes">
				<include name="org/metawidget/jsp/allwidgets/**"/>
				<include name="org/metawidget/shared/allwidgets/**"/>
			</classes>
			<lib dir="${relative.dir}/${build.dir}/lib">
				<include name="jstl-*.jar"/>
				<include name="metawidget.jar"/>
				<include name="standard.jar"/>
			</lib>
		</war>
		
		<!-- Use tomcat, not tomcat4, because we need JSP 2.0 to test EL -->

		<copy file="${relative.dir}/${build.dir}/test/jsp/allwidgets-jsp.war" todir="${tomcat.dir}/webapps" overwrite="true"/>
		<delete dir="${tomcat.dir}/webapps/allwidgets-jsp"/>
		<delete dir="${tomcat.dir}/webapps/addressbook-jsp"/>
		<delete file="${tomcat.dir}/webapps/addressbook-jsp.war"/>
		<antcall target="test-web-start-tomcat"/>

		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${relative.dir}/test/src/web/jsp">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file allwidgets-test.xml"/>
		</java>

		<antcall target="test-web-stop-tomcat"/>
		
	</target>

	<target name="test-spring-allwidgets" depends="test-shared-allwidgets">
		
		<mkdir dir="${relative.dir}/${build.dir}/test/spring"/>

		<war warfile="${relative.dir}/${build.dir}/test/spring/allwidgets-spring.war" webxml="${relative.dir}/test/src/web/spring/allwidgets/WEB-INF/web.xml">
			<fileset dir="${relative.dir}/test/src/web/spring/allwidgets">
				<exclude name="**/classes/**"/>
				<exclude name="**/lib/**"/>
				<exclude name="**/.*"/>
				<exclude name="WEB-INF/web.xml"/>
			</fileset>
			<classes dir="${relative.dir}/${build.dir}/test-classes">
				<include name="org/metawidget/spring/allwidgets/**"/>
				<include name="org/metawidget/shared/allwidgets/**"/>
			</classes>
			<lib dir="${relative.dir}/${build.dir}/lib">
				<include name="commons-digester-*.jar"/>
				<include name="commons-logging-*.jar"/>
				<include name="jstl-*.jar"/>
				<include name="spring.jar"/>
				<include name="spring-*.jar"/>
				<include name="metawidget.jar"/>
			</lib>
		</war>

		<copy file="${relative.dir}/${build.dir}/test/spring/allwidgets-spring.war" todir="${tomcat4.dir}/webapps" overwrite="true"/>
		<delete dir="${tomcat4.dir}/webapps/allwidgets-spring"/>
		<antcall target="test-web-start-tomcat4"/>

		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${relative.dir}/test/src/web/spring">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file allwidgets-test.xml"/>
		</java>

		<antcall target="test-web-stop-tomcat4"/>
		
	</target>
	
	<target name="test-spring-quirks" depends="flatten-libs,compile-test">
		
		<mkdir dir="${relative.dir}/${build.dir}/test/spring"/>

		<war warfile="${relative.dir}/${build.dir}/test/spring/quirks-spring.war" webxml="${relative.dir}/test/src/web/spring/quirks/WEB-INF/web.xml">
			<fileset dir="${relative.dir}/test/src/web/spring/quirks">
				<exclude name="**/classes/**"/>
				<exclude name="**/lib/**"/>
				<exclude name="**/.*"/>
				<exclude name="WEB-INF/web.xml"/>
			</fileset>
			<classes dir="${relative.dir}/${build.dir}/test-classes">
				<include name="org/metawidget/spring/quirks/**"/>
			</classes>
			<lib dir="${relative.dir}/${build.dir}/lib">
				<include name="commons-digester-*.jar"/>
				<include name="commons-logging-*.jar"/>
				<include name="jstl-*.jar"/>
				<include name="spring.jar"/>
				<include name="spring-*.jar"/>
				<include name="standard.jar"/>
				<include name="metawidget.jar"/>
			</lib>
		</war>

		<copy file="${relative.dir}/${build.dir}/test/spring/quirks-spring.war" todir="${tomcat.dir}/webapps" overwrite="true"/>
		<delete dir="${tomcat.dir}/webapps/quirks-spring"/>
		<antcall target="test-web-start-tomcat"/>

		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${relative.dir}/test/src/web/spring">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file quirks-test.xml"/>
		</java>

		<antcall target="test-web-stop-tomcat"/>
		
	</target>

	<target name="test-struts-allwidgets" depends="test-shared-allwidgets">
		
		<mkdir dir="${relative.dir}/${build.dir}/test/struts"/>

		<war warfile="${relative.dir}/${build.dir}/test/struts/allwidgets-struts.war" webxml="${relative.dir}/test/src/web/struts/allwidgets/WEB-INF/web.xml">
			<fileset dir="${relative.dir}/test/src/web/struts/allwidgets">
				<exclude name="**/classes/**"/>
				<exclude name="**/lib/**"/>
				<exclude name="**/.*"/>
				<exclude name="WEB-INF/web.xml"/>
			</fileset>
			<classes dir="${relative.dir}/${build.dir}/test-classes">
				<include name="org/metawidget/struts/allwidgets/**"/>
				<include name="org/metawidget/shared/allwidgets/**"/>
			</classes>
			<lib dir="${relative.dir}/${build.dir}/lib">
				<include name="commons-beanutils-*.jar"/>
				<include name="commons-digester-*.jar"/>
				<include name="commons-logging-*.jar"/>
				<include name="jstl-*.jar"/>
				<include name="struts.jar"/>
				<include name="metawidget.jar"/>
			</lib>
		</war>

		<copy file="${relative.dir}/${build.dir}/test/struts/allwidgets-struts.war" todir="${tomcat4.dir}/webapps" overwrite="true"/>
		<delete dir="${tomcat4.dir}/webapps/allwidgets-struts"/>
		<antcall target="test-web-start-tomcat4"/>
		
		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${relative.dir}/test/src/web/struts">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file allwidgets-test.xml"/>
		</java>
			
		<antcall target="test-web-stop-tomcat4"/>
		
	</target>

	<target name="test-struts-quirks" depends="flatten-libs,compile-test">
		
		<mkdir dir="${relative.dir}/${build.dir}/test/struts"/>

		<war warfile="${relative.dir}/${build.dir}/test/struts/quirks-struts.war" webxml="${relative.dir}/test/src/web/struts/quirks/WEB-INF/web.xml">
			<fileset dir="${relative.dir}/test/src/web/struts/quirks">
				<exclude name="**/classes/**"/>
				<exclude name="**/lib/**"/>
				<exclude name="**/.*"/>
				<exclude name="WEB-INF/web.xml"/>
			</fileset>
			<classes dir="${relative.dir}/${build.dir}/test-classes">
				<include name="org/metawidget/struts/quirks/**"/>
			</classes>
			<lib dir="${relative.dir}/${build.dir}/lib">
				<include name="commons-beanutils-*.jar"/>
				<include name="commons-collections-*.jar"/>
				<include name="commons-digester-*.jar"/>
				<include name="commons-lang-*.jar"/>
				<include name="commons-logging-*.jar"/>
				<include name="displaytag-*.jar"/>
				<include name="jstl-*.jar"/>
				<include name="struts.jar"/>
				<include name="metawidget.jar"/>
			</lib>
		</war>

		<copy file="${relative.dir}/${build.dir}/test/struts/quirks-struts.war" todir="${tomcat.dir}/webapps" overwrite="true"/>
		<delete dir="${tomcat.dir}/webapps/quirks-struts"/>
		<antcall target="test-web-start-tomcat"/>
		
		<java classname="org.apache.tools.ant.Main" failonerror="true" fork="true" dir="${relative.dir}/test/src/web/struts">
			<classpath>
				<fileset dir="${ant.home}">
					<include name="lib/*.jar"/>
				</fileset>
			</classpath>
			<arg line="-file quirks-test.xml"/>
		</java>
			
		<antcall target="test-web-stop-tomcat"/>
		
	</target>

	<available property="tomcat4-available" file="${tomcat4.dir}/bin/bootstrap.jar"/>

	<target name="test-web4-skip" unless="tomcat4-available">

		<echo level="warning" message="Tomcat4 not installed at 'tomcat4.dir' in 'build.properties'. Not running J2SE 1.4 web tests"/>

	</target>
	
	<target name="test-web4-ok" if="tomcat4-available">

		<available property="webtest-available" file="${webtest.dir}/webtest.xml"/>
		<fail message="WebTest not installed at 'webtest.dir' in 'build.properties'. Not running web tests" unless="webtest-available"/>
		
		<antcall target="test-faces-allwidgets"/>
		<antcall target="test-spring-allwidgets"/>
		<antcall target="test-struts-allwidgets"/>
		
	</target>

	<target name="test-web4" depends="test-web4-ok, test-web4-skip"/>
	
	<target name="test" depends="test-web, test-web4, test-jboss, test-unit"/>

</project>
